import { type Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ClientProvider from "@/components/ClientProvider";
import { CurrencyProvider } from "@/context/CurrencyContext";
import Navbar from "@/components/ui/navbar"; // ✅ Import Navbar
import Footer from "@/components/ui/footer"; // ✅ Import Footer
import { Toaster } from "react-hot-toast";
import { CartProvider } from "@/context/CartContext";
import { ClerkProvider } from "@clerk/nextjs";
import { Suspense } from "react";
import { headers } from "next/headers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Vendora",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const hdrs = await headers();

  const requestUrl = (hdrs).get("url") || "";
  const isAdminRoute = requestUrl.includes("/admin");
  console.log("Request URL:", requestUrl);
  console.log(isAdminRoute);
  return (
    <ClerkProvider>
      <CartProvider>
        <CurrencyProvider>
          <Suspense>
            <ClientProvider>
              <html lang="en">
                <body
                  className={`${geistSans.variable} ${geistMono.variable} antialiased`}
                >
                  {/* ✅ Add Navbar Here */}
                  <Navbar />
                  <Toaster
                    position="bottom-right"
                    toastOptions={{
                      duration: 4000,
                      style: {
                        background: "#fff",
                        color: "#000",
                        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.15)",
                        borderRadius: "8px",
                        padding: "16px",
                      },
                    }}
                  />
                  {/* ✅ Wrap children inside a main container */}
                  <main className="min-h-screen flex flex-col">{children}</main>
                  {isAdminRoute ? null : <Footer />}
                </body>
              </html>
            </ClientProvider>
          </Suspense>
        </CurrencyProvider>
      </CartProvider>
    </ClerkProvider>
  );
}
